{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,CCEA,IAuDQ,EACA,EAWA,EAMA,EAzEF,EAAQ,SAAS,aAAa,CAAC,SACjC,EAAW,MACX,EAAkB,KAClB,EAAc,KAElB,SAAS,aAAa,CAAC,SAAS,gBAAgB,CAAC,QAAS,SAAC,CAA3D,EACE,IAAM,EAAgB,EAAG,EAAM,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,EAC5C,EAAe,EAAa,IAAI,CAAC,SAAC,CAAxC,EAA+C,OAAA,IAAO,EAAE,MAAM,A,GAE9D,GAAK,GAIL,IAAM,EAAQ,EAAa,OAAO,CAAC,GAC7B,EAAQ,EAAM,aAAa,CAAC,SAC5B,EAAQ,EAAG,EAAM,IAAI,CAEvB,CAAA,IAAoB,EACtB,EAAW,AAAa,QAAb,EAAqB,OAAS,OAEzC,EAAW,MACX,EAAkB,GAGpB,EAAK,IAAI,CAAC,SAAC,CAAA,CAAG,CAAd,EACE,IAAM,EAAQ,EAAE,KAAK,CAAC,EAAM,CAAC,WAAW,CAAC,IAAI,GACvC,EAAQ,EAAE,KAAK,CAAC,EAAM,CAAC,WAAW,CAAC,IAAI,GAE7C,GAAI,KAAK,IAAI,CAAC,GAAQ,CACpB,IAAM,EAAO,WAAW,EAAM,OAAO,CAAC,WAAY,KAC5C,EAAO,WAAW,EAAM,OAAO,CAAC,WAAY,KAElD,MAAO,AAAa,QAAb,EAAqB,EAAO,EAAO,EAAO,CACnD,CAEA,MAAO,AAAa,QAAb,EACH,EAAM,aAAa,CAAC,GACpB,EAAM,aAAa,CAAC,EAC1B,GAEA,EAAM,SAAS,CAAG,GAClB,EAAK,OAAO,CAAC,SAAC,CAAd,EAAs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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar table = document.querySelector(\"table\");\nvar sortType = \"ASC\";\nvar lastSortedTitle = null;\nvar editingCell = null;\ndocument.querySelector(\"thead\").addEventListener(\"click\", function(e) {\n    var headerTitles = _to_consumable_array(table.tHead.rows[0].cells);\n    var clickedTitle = headerTitles.find(function(el) {\n        return el === e.target;\n    });\n    if (!clickedTitle) return;\n    var index = headerTitles.indexOf(clickedTitle);\n    var tbody = table.querySelector(\"tbody\");\n    var rows = _to_consumable_array(tbody.rows);\n    if (lastSortedTitle === index) sortType = sortType === \"ASC\" ? \"DESC\" : \"ASC\";\n    else {\n        sortType = \"ASC\";\n        lastSortedTitle = index;\n    }\n    rows.sort(function(a, b) {\n        var cellA = a.cells[index].textContent.trim();\n        var cellB = b.cells[index].textContent.trim();\n        if (/\\$/.test(cellA)) {\n            var numA = parseFloat(cellA.replace(/[^\\d.-]/g, \"\"));\n            var numB = parseFloat(cellB.replace(/[^\\d.-]/g, \"\"));\n            return sortType === \"ASC\" ? numA - numB : numB - numA;\n        }\n        return sortType === \"ASC\" ? cellA.localeCompare(cellB) : cellB.localeCompare(cellA);\n    });\n    tbody.innerHTML = \"\";\n    rows.forEach(function(row) {\n        return tbody.appendChild(row);\n    });\n});\ndocument.querySelector(\"tbody\").addEventListener(\"click\", function(e) {\n    _to_consumable_array(table.querySelector(\"tbody\").rows).forEach(function(row) {\n        if (row.contains(e.target)) row.classList.add(\"active\");\n        else row.classList.remove(\"active\");\n    });\n});\n(function addedEmployeeForm() {\n    var form = document.createElement(\"form\");\n    var selectValues = [\n        \"Tokyo\",\n        \"Singapore\",\n        \"London\",\n        \"New York\",\n        \"Edinburgh\",\n        \"San Francisco\"\n    ];\n    form.classList.add(\"new-employee-form\");\n    var dataParam = _to_consumable_array(table.tHead.rows[0].cells).map(function(el) {\n        return el.textContent.toLowerCase();\n    });\n    dataParam.forEach(function(el) {\n        return addNeededInput(el);\n    });\n    var submitButton = document.createElement(\"button\");\n    submitButton.textContent = \"Save to table\";\n    submitButton.type = \"submit\";\n    form.appendChild(submitButton);\n    document.body.appendChild(form);\n    form.addEventListener(\"submit\", function(e) {\n        var validateEmployeeData = function validateEmployeeData() {\n            if (newEmployeeData.name.length < 4) return \"Name value has less than 4 letters\";\n            if (newEmployeeData.age < 18 || newEmployeeData.age > 90) return \"Age value is less than 18 or more than 90\";\n            return null;\n        };\n        e.preventDefault();\n        var newEmployeeData = {};\n        var formData = new FormData(form);\n        formData.forEach(function(value, key) {\n            if (key === \"salary\") newEmployeeData[key] = \"$\".concat(parseFloat(value).toLocaleString(\"en-US\"));\n            else newEmployeeData[key] = value;\n        });\n        var message = validateEmployeeData();\n        notification(message);\n        if (message) return;\n        var newRow = table.querySelector(\"tbody\").insertRow();\n        dataParam.forEach(function(param) {\n            var newCell = newRow.insertCell();\n            newCell.textContent = newEmployeeData[param];\n        });\n        form.reset();\n    });\n    function addNeededInput(el) {\n        var input;\n        var label = document.createElement(\"label\");\n        label.textContent = \"\".concat(el.charAt(0).toUpperCase() + el.slice(1), \": \");\n        if (el === \"office\") {\n            input = document.createElement(\"select\");\n            selectValues.forEach(function(valueOfSelect) {\n                var option = document.createElement(\"option\");\n                option.value = valueOfSelect;\n                option.textContent = valueOfSelect;\n                input.appendChild(option);\n            });\n        } else {\n            input = document.createElement(\"input\");\n            if (el === \"age\" || el === \"salary\") input.type = \"number\";\n            else input.type = \"text\";\n        }\n        input.setAttribute(\"data-qa\", el);\n        input.name = el;\n        input.required = true;\n        label.appendChild(input);\n        form.appendChild(label);\n    }\n    function notification(message) {\n        var existingNotice = document.querySelector(\".notification\");\n        if (existingNotice) existingNotice.remove();\n        var notice = document.createElement(\"div\");\n        var title = document.createElement(\"h2\");\n        notice.classList.add(\"notification\");\n        notice.setAttribute(\"data-qa\", \"notification\");\n        if (!message) {\n            notice.classList.add(\"success\");\n            notice.textContent = \"A new employee is successfully added to the table\";\n            title.textContent = \"Success\";\n        } else {\n            notice.classList.add(\"error\");\n            notice.textContent = message;\n            title.textContent = \"Error\";\n        }\n        notice.prepend(title);\n        document.body.appendChild(notice);\n        setTimeout(function() {\n            notice.remove();\n        }, 5000);\n    }\n})();\ndocument.querySelector(\"tbody\").addEventListener(\"dblclick\", function(e) {\n    var saveChanges = function saveChanges(cell) {\n        var newValue = cell.querySelector(\"input\").value.trim();\n        if (newValue === \"\") cell.textContent = initialValue;\n        else if (/\\$/.test(initialValue)) cell.textContent = \"$\".concat(parseFloat(newValue).toLocaleString(\"en-US\"));\n        else cell.textContent = newValue;\n        editingCell = null;\n    };\n    var targetCell = e.target;\n    if (targetCell.tagName !== \"TD\") return;\n    if (editingCell && editingCell !== targetCell) saveChanges(editingCell);\n    editingCell = targetCell;\n    var initialValue = targetCell.textContent;\n    var input = document.createElement(\"input\");\n    input.classList.add(\"cell-input\");\n    input.value = initialValue;\n    targetCell.textContent = \"\";\n    targetCell.appendChild(input);\n    input.focus();\n    input.addEventListener(\"blur\", function() {\n        saveChanges(targetCell);\n    });\n    input.addEventListener(\"keypress\", function(ev) {\n        if (ev.key === \"Enter\") saveChanges(targetCell);\n    });\n});\n\n//# sourceMappingURL=index.d0e43458.js.map\n","'use strict';\n\nconst table = document.querySelector('table');\nlet sortType = 'ASC';\nlet lastSortedTitle = null;\nlet editingCell = null;\n\ndocument.querySelector('thead').addEventListener('click', (e) => {\n  const headerTitles = [...table.tHead.rows[0].cells];\n  const clickedTitle = headerTitles.find((el) => el === e.target);\n\n  if (!clickedTitle) {\n    return;\n  }\n\n  const index = headerTitles.indexOf(clickedTitle);\n  const tbody = table.querySelector('tbody');\n  const rows = [...tbody.rows];\n\n  if (lastSortedTitle === index) {\n    sortType = sortType === 'ASC' ? 'DESC' : 'ASC';\n  } else {\n    sortType = 'ASC';\n    lastSortedTitle = index;\n  }\n\n  rows.sort((a, b) => {\n    const cellA = a.cells[index].textContent.trim();\n    const cellB = b.cells[index].textContent.trim();\n\n    if (/\\$/.test(cellA)) {\n      const numA = parseFloat(cellA.replace(/[^\\d.-]/g, ''));\n      const numB = parseFloat(cellB.replace(/[^\\d.-]/g, ''));\n\n      return sortType === 'ASC' ? numA - numB : numB - numA;\n    }\n\n    return sortType === 'ASC'\n      ? cellA.localeCompare(cellB)\n      : cellB.localeCompare(cellA);\n  });\n\n  tbody.innerHTML = '';\n  rows.forEach((row) => tbody.appendChild(row));\n});\n\ndocument.querySelector('tbody').addEventListener('click', (e) => {\n  [...table.querySelector('tbody').rows].forEach((row) => {\n    if (row.contains(e.target)) {\n      row.classList.add('active');\n    } else {\n      row.classList.remove('active');\n    }\n  });\n});\n\n(function addedEmployeeForm() {\n  const form = document.createElement('form');\n  const selectValues = [\n    'Tokyo',\n    'Singapore',\n    'London',\n    'New York',\n    'Edinburgh',\n    'San Francisco',\n  ];\n\n  form.classList.add('new-employee-form');\n\n  const dataParam = [...table.tHead.rows[0].cells].map((el) => {\n    return el.textContent.toLowerCase();\n  });\n\n  dataParam.forEach((el) => addNeededInput(el));\n\n  const submitButton = document.createElement('button');\n\n  submitButton.textContent = 'Save to table';\n  submitButton.type = 'submit';\n  form.appendChild(submitButton);\n\n  document.body.appendChild(form);\n\n  form.addEventListener('submit', (e) => {\n    e.preventDefault();\n\n    const newEmployeeData = {};\n    const formData = new FormData(form);\n\n    formData.forEach((value, key) => {\n      if (key === 'salary') {\n        newEmployeeData[key] = `$${parseFloat(value).toLocaleString('en-US')}`;\n      } else {\n        newEmployeeData[key] = value;\n      }\n    });\n\n    const message = validateEmployeeData();\n\n    notification(message);\n\n    if (message) {\n      return;\n    }\n\n    const newRow = table.querySelector('tbody').insertRow();\n\n    dataParam.forEach((param) => {\n      const newCell = newRow.insertCell();\n\n      newCell.textContent = newEmployeeData[param];\n    });\n\n    form.reset();\n\n    function validateEmployeeData() {\n      if (newEmployeeData.name.length < 4) {\n        return 'Name value has less than 4 letters';\n      }\n\n      if (newEmployeeData.age < 18 || newEmployeeData.age > 90) {\n        return 'Age value is less than 18 or more than 90';\n      }\n\n      return null;\n    }\n  });\n\n  function addNeededInput(el) {\n    let input;\n    const label = document.createElement('label');\n\n    label.textContent = `${el.charAt(0).toUpperCase() + el.slice(1)}: `;\n\n    if (el === 'office') {\n      input = document.createElement('select');\n\n      selectValues.forEach((valueOfSelect) => {\n        const option = document.createElement('option');\n\n        option.value = valueOfSelect;\n        option.textContent = valueOfSelect;\n        input.appendChild(option);\n      });\n    } else {\n      input = document.createElement('input');\n\n      if (el === 'age' || el === 'salary') {\n        input.type = 'number';\n      } else {\n        input.type = 'text';\n      }\n    }\n\n    input.setAttribute('data-qa', el);\n    input.name = el;\n    input.required = true;\n\n    label.appendChild(input);\n    form.appendChild(label);\n  }\n\n  function notification(message) {\n    const existingNotice = document.querySelector('.notification');\n\n    if (existingNotice) {\n      existingNotice.remove();\n    }\n\n    const notice = document.createElement('div');\n    const title = document.createElement('h2');\n\n    notice.classList.add('notification');\n    notice.setAttribute('data-qa', 'notification');\n\n    if (!message) {\n      notice.classList.add('success');\n      notice.textContent = 'A new employee is successfully added to the table';\n      title.textContent = 'Success';\n    } else {\n      notice.classList.add('error');\n      notice.textContent = message;\n      title.textContent = 'Error';\n    }\n    notice.prepend(title);\n    document.body.appendChild(notice);\n\n    setTimeout(() => {\n      notice.remove();\n    }, 5000);\n  }\n})();\n\ndocument.querySelector('tbody').addEventListener('dblclick', (e) => {\n  const targetCell = e.target;\n\n  if (targetCell.tagName !== 'TD') {\n    return;\n  }\n\n  if (editingCell && editingCell !== targetCell) {\n    saveChanges(editingCell);\n  }\n\n  editingCell = targetCell;\n\n  const initialValue = targetCell.textContent;\n  const input = document.createElement('input');\n\n  input.classList.add('cell-input');\n  input.value = initialValue;\n\n  targetCell.textContent = '';\n  targetCell.appendChild(input);\n  input.focus();\n\n  input.addEventListener('blur', () => {\n    saveChanges(targetCell);\n  });\n\n  input.addEventListener('keypress', (ev) => {\n    if (ev.key === 'Enter') {\n      saveChanges(targetCell);\n    }\n  });\n\n  function saveChanges(cell) {\n    const newValue = cell.querySelector('input').value.trim();\n\n    if (newValue === '') {\n      cell.textContent = initialValue;\n    } else {\n      if (/\\$/.test(initialValue)) {\n        cell.textContent = `$${parseFloat(newValue).toLocaleString('en-US')}`;\n      } else {\n        cell.textContent = newValue;\n      }\n    }\n\n    editingCell = null;\n  }\n});\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","form","selectValues","dataParam","submitButton","table","document","querySelector","sortType","lastSortedTitle","editingCell","addEventListener","e","headerTitles","tHead","rows","cells","clickedTitle","find","el","target","index","indexOf","tbody","sort","a","b","cellA","textContent","trim","cellB","numA","parseFloat","replace","numB","localeCompare","innerHTML","forEach","row","appendChild","contains","classList","add","remove","createElement","map","toLowerCase","input","label","concat","charAt","toUpperCase","valueOfSelect","option","value","type","setAttribute","required","body","preventDefault","existingNotice","notice","title","newEmployeeData","formData","FormData","key","toLocaleString","message","age","prepend","setTimeout","newRow","insertRow","param","newCell","insertCell","reset","saveChanges","cell","newValue","initialValue","targetCell","tagName","focus","ev"],"version":3,"file":"index.d0e43458.js.map"}